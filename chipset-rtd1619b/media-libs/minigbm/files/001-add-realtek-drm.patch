Index: minigbm/drv.c
===================================================================
--- minigbm.orig/drv.c
+++ minigbm/drv.c
@@ -54,6 +54,7 @@ extern const struct backend backend_syna
 extern const struct backend backend_virtgpu;
 extern const struct backend backend_udl;
 extern const struct backend backend_vkms;
+extern const struct backend backend_realtek;
 
 static const struct backend *drv_backend_list[] = {
 #ifdef DRV_AMDGPU
@@ -71,7 +72,7 @@ static const struct backend *drv_backend
 	&backend_evdi,	    &backend_komeda,	&backend_marvell, &backend_mediatek,
 	&backend_meson,	    &backend_nouveau,	&backend_radeon,  &backend_rockchip,
 	&backend_sun4i_drm, &backend_synaptics, &backend_udl,	  &backend_virtgpu,
-	&backend_vkms
+	&backend_vkms,      &backend_realtek
 };
 
 void drv_preload(bool load)
Index: minigbm/dumb_driver.c
===================================================================
--- minigbm.orig/dumb_driver.c
+++ minigbm/dumb_driver.c
@@ -75,6 +75,9 @@ INIT_DUMB_DRIVER(synaptics)
 INIT_DUMB_DRIVER(udl)
 INIT_DUMB_DRIVER(vkms)
 
+#ifndef DRV_REALTEK
+INIT_DUMB_DRIVER(realtek)
+#endif
 #ifndef DRV_ROCKCHIP
 INIT_DUMB_DRIVER(rockchip)
 #endif
Index: minigbm/minigbm_helpers.c
===================================================================
--- minigbm.orig/minigbm_helpers.c
+++ minigbm/minigbm_helpers.c
@@ -204,7 +204,9 @@ static int detect_device_info(unsigned i
 	} else if (strncmp("udl", version->name, version->name_len) == 0) {
 		info->dev_type_flags |=
 		    GBM_DEV_TYPE_FLAG_DISPLAY | GBM_DEV_TYPE_FLAG_USB | GBM_DEV_TYPE_FLAG_BLOCKED;
-	}
+	} else if (strncmp("realtek", version->name, version->name_len) == 0) {
+    info->dev_type_flags |= GBM_DEV_TYPE_FLAG_DISPLAY | GBM_DEV_TYPE_FLAG_ARMSOC;
+  }
 
 done:
 	drmFreeVersion(version);
