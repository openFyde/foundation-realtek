From aeb80f226e738fa4713487845e89c8974f074e53 Mon Sep 17 00:00:00 2001
From: Edward Wu <edwardwu@realtek.com>
Date: Wed, 14 Aug 2024 06:53:07 +0800
Subject: [PATCH 02/10] mmc: rtk-sdmmc: prevent launch wakeup event and restore
 clk during S3

Change-Id: I6851999f8a4f4d69dd406828a45d1137acdbaed1
---
 drivers/mmc/host/rtk-sdmmc.c | 22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git a/drivers/mmc/host/rtk-sdmmc.c b/drivers/mmc/host/rtk-sdmmc.c
index ef4e07842631..519ea3ff6ead 100644
--- a/drivers/mmc/host/rtk-sdmmc.c
+++ b/drivers/mmc/host/rtk-sdmmc.c
@@ -367,11 +367,14 @@ static int __maybe_unused rtk_sdmmc_pm_suspend(struct device *dev)
 		rtk_sdmmc_sync(rtk_host);
 		rtk_host->rtflags &= ~RTKCR_FCARD_SELECTED;
 		sdmmc_rca = 0;
-		mmc_detect_change(rtk_host->mmc, msecs_to_jiffies(det_time));
+		rtk_host->mmc->detect_change = 1;
+		queue_delayed_work(system_freezable_wq, &rtk_host->mmc->detect,  msecs_to_jiffies(det_time));
 	} else {
 		suspend_SD_insert_flag=false;
 	}
 
+	rtk_sdmmc_close_clk(mmc);
+
 	return ret;
 }
 
@@ -386,16 +389,15 @@ static int __maybe_unused rtk_sdmmc_pm_resume(struct device *dev)
 	void __iomem *sdmmc_base = rtk_host->sdmmc;
 
 	re_initialize = false;
+
+	rtk_sdmmc_open_clk(mmc);
+
 	//in 1395 platform, system will turn off the SD clock if there is no SD card. Therefore, we must add this check for fear that invalid address access
 	reginfo = readl(rtk_host->gpiodir + GPDATI1);
 	if (reginfo & 0x8) {
 
 		void __iomem *gpiodir_base = rtk_host->gpiodir;
 
-		reset_control_deassert(rstc_cr);
-		clk_prepare_enable(clk_cr);
-		clk_prepare_enable(clk_sd_ip);
-
 		if (chip_id == CHIP_ID_RTD1319)
 			writel(readl(gpiodir_base + 0x64) | 0xc, gpiodir_base + 0x64); //open the ldo enable
 		else if (chip_id == CHIP_ID_RTD1619B)
@@ -412,7 +414,6 @@ static int __maybe_unused rtk_sdmmc_pm_resume(struct device *dev)
 		}
 
 	} else if (!(reginfo & 0x8) && suspend_SD_insert_flag == false) {	//this case is to handle that SD card is plugged during suspend
-		rtk_sdmmc_open_clk(mmc);
 		re_initialize = true;
 	}
 
@@ -462,7 +463,7 @@ static int __maybe_unused rtk_sdmmc_pm_resume(struct device *dev)
 	suspend_flag = false;
 
 	//in 1395 platform, we turn on the clk in the begining of resume process if no SD card, we have to close the clk after resume
-	if(reginfo & 0x8) {
+	if((reginfo & 0x8) && !clk_disabled) {
 		void __iomem *gpiodir_base = rtk_host->gpiodir;
 
 		writel(0x00000000, pll_base + CR_PLL_SD4);
@@ -2456,11 +2457,9 @@ void rtk_sdmmc_close_clk(struct mmc_host *host)
 	void __iomem *pll_base = rtk_host->pll;
 	void __iomem *gpiodir_base = rtk_host->gpiodir;
 
-	int card_exist = readl(rtk_host->gpiodir+GPDATI1);
-
-	if ((card_exist & 0x8) && !clk_disabled) {
+	if (!clk_disabled) {
 		clk_disabled=1;
-		pr_info("SD card does not exist and sd clk is disabled...\n");
+		pr_info("%s SD clk is disabled...\n", __func__);
 		writel(readl(pll_base + CR_PLL_SD1) & 0xfffffffc ,pll_base + CR_PLL_SD1);
 		writel(readl(pll_base + CR_PLL_SD2) & 0xfffffffe ,pll_base + CR_PLL_SD2);
 		writel(0x00000000, pll_base + CR_PLL_SD4);
@@ -2474,7 +2473,6 @@ void rtk_sdmmc_close_clk(struct mmc_host *host)
 			writel(readl(gpiodir_base+0xc4)&0xfffffff3,gpiodir_base+0xc4);
 	}
 }
-EXPORT_SYMBOL(rtk_sdmmc_close_clk);
 
 void rtk_sdmmc_open_clk(struct mmc_host *host)
 {
-- 
2.45.2

