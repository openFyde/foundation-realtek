From dc767fc4146babd6580779c5b9e633518f60cc1c Mon Sep 17 00:00:00 2001
From: Edward Wu <edwardwu@realtek.com>
Date: Wed, 14 Aug 2024 06:56:37 +0800
Subject: [PATCH 04/10] linux-5.15: rpmsg: handle ACPU and VCPU S3
 suspend/resume

- require VFW without TEEOS_SUSPEND_HANDSHAKE
-- use shared memory RPC

SW-8034

Change-Id: I967e745e2fa75984859b46470f58b6f171eeb860
---
 drivers/rpmsg/rpmsg_rtk.c | 35 +++++++++++++++++++++++++++++++++--
 1 file changed, 33 insertions(+), 2 deletions(-)

diff --git a/drivers/rpmsg/rpmsg_rtk.c b/drivers/rpmsg/rpmsg_rtk.c
index 07f782c4f7c2..d85e738c29ff 100644
--- a/drivers/rpmsg/rpmsg_rtk.c
+++ b/drivers/rpmsg/rpmsg_rtk.c
@@ -1609,6 +1609,31 @@ static int rtk_rcpu_remove(struct platform_device *pdev)
 #ifdef CONFIG_PM_SLEEP
 static int rtk_rcpu_suspend(struct device *dev)
 {
+	struct list_head *rcpus_list = dev_get_drvdata(dev);
+	struct list_head *list;
+
+	dev_info(dev, "enter %s\n", __func__);
+
+	list_for_each(list, rcpus_list) {
+		struct rtk_rcpu *rcpu;
+		int timeout = 2000;
+
+		rcpu = list_entry(list, struct rtk_rcpu, list);
+		if (rcpu->id == AUDIO_ID || rcpu->id == VIDEO_ID) {
+			rcpu_set_flag(rcpu, 0xdaedffff); /* STOP HAS_CHECK */
+			while ((rcpu_get_flag(rcpu) != 0x0) && ((timeout--) > 0))
+				mdelay(1);
+
+			RPC_RESET_BIT(rcpu->info.rcpu_notify, rcpu->info.to_rcpu_notify_bit);
+			rcpu_set_flag(rcpu, 0xdeadffff); /* WAIT RPC SUSPEND READY */
+			while ((rcpu_get_flag(rcpu) != 0x0) && ((timeout--) > 0))
+				mdelay(1);
+			dev_info(dev, "%d: wait %d ms\n", rcpu->id, (2000 - timeout));
+		}
+	}
+
+	dev_info(dev, "exit %s\n", __func__);
+
 	return 0;
 }
 
@@ -1622,13 +1647,19 @@ static int rtk_rcpu_resume(struct device *dev)
 
 		rcpu = list_entry(list, struct rtk_rcpu, list);
 		writel(rcpu->info.intr_en | RPC_INT_WRITE_EN, rcpu->rcpu_intr_base + RPC_SB2_INT_EN);
+		if (rcpu->id == AUDIO_ID || rcpu->id == VIDEO_ID) {
+			RPC_SET_BIT(rcpu->info.rcpu_notify, rcpu->info.to_rcpu_notify_bit);
+			rcpu_set_flag(rcpu, 0xffffffff);
+		}
 	}
 
 	return 0;
 }
 
-static SIMPLE_DEV_PM_OPS(rtk_rcpu_pm_ops, rtk_rcpu_suspend,
-			 rtk_rcpu_resume);
+static const struct dev_pm_ops rtk_rcpu_pm_ops = {
+	SET_LATE_SYSTEM_SLEEP_PM_OPS(rtk_rcpu_suspend,
+			 rtk_rcpu_resume)
+};
 #else
 static const struct dev_pm_ops rtk_rcpu_pm_ops = {};
 #endif
-- 
2.45.2

