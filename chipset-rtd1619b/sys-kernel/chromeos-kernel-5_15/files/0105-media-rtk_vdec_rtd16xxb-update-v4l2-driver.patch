From 1f92545f6990f672cb892e3c123cf6cca47fcdd1 Mon Sep 17 00:00:00 2001
From: Edward Wu <edwardwu@realtek.com>
Date: Fri, 19 Jul 2024 12:26:49 +0800
Subject: [PATCH] media: rtk_vdec_rtd16xxb: update v4l2 driver

internal v4l2 commit:
832da75 (HEAD -> topic/va_v4l2-stark-k5.15_chromium) [media] media: realtek: remove unrelated files

Change-Id: I9a87dc778b18f7bb793ebb601ef4a05270bb6507
---
 .../platform/realtek/vpu/stateful/drv_if.c     |  6 +++---
 .../media/platform/realtek/vpu/stateful/ve2.c  |  9 ++++++---
 .../platform/realtek/vpu/stateful/ve2rpc.c     | 18 ++++++++----------
 .../media/platform/realtek/vpu/stateful/vpu.c  | 13 ++++++-------
 4 files changed, 23 insertions(+), 23 deletions(-)

diff --git a/drivers/media/platform/realtek/vpu/stateful/drv_if.c b/drivers/media/platform/realtek/vpu/stateful/drv_if.c
index a6f017f35f74..57fc9c428259 100644
--- a/drivers/media/platform/realtek/vpu/stateful/drv_if.c
+++ b/drivers/media/platform/realtek/vpu/stateful/drv_if.c
@@ -1063,13 +1063,13 @@ static int vpu_release(struct file *file)
 
 	vpu_info("Releasing instance %p\n", ctx);
 
+	mutex_lock(&dev->dev_mutex);
 	op->vpu_reset_resource(&ctx->fh);
 
 	v4l2_fh_del(&ctx->fh);
 	v4l2_fh_exit(&ctx->fh);
-	mutex_lock(&dev->dev_mutex);
+
 	v4l2_m2m_ctx_release(ctx->fh.m2m_ctx);
-	mutex_unlock(&dev->dev_mutex);
 
 	if (ctx->vpu_ctx)
 		vpu_free_context(ctx->vpu_ctx);
@@ -1077,7 +1077,7 @@ static int vpu_release(struct file *file)
 	v4l2_ctrl_handler_free(&ctx->ctrl_hdl);
 
 	kfree(ctx);
-
+	mutex_unlock(&dev->dev_mutex);
 	atomic_dec(&dev->num_inst);
 	hasVideo = 0;
 
diff --git a/drivers/media/platform/realtek/vpu/stateful/ve2.c b/drivers/media/platform/realtek/vpu/stateful/ve2.c
index 6a8044bcef29..c358f4db65a1 100644
--- a/drivers/media/platform/realtek/vpu/stateful/ve2.c
+++ b/drivers/media/platform/realtek/vpu/stateful/ve2.c
@@ -365,7 +365,6 @@ static int ve2_out_qbuf(void *fh, uint8_t *buf, uint32_t len, uint64_t pts,
 
 	if (v_ctx->is_decoder_error || out_hdl->is_error) {
 		vpu_err("%s decode error %d, %d", __func__,v_ctx->is_decoder_error, cap_hdl->is_error);
-		v_ctx->is_decoder_error = true;
 		return -EIO;
 	}
 	if (v_ctx->is_bs_error) {
@@ -620,10 +619,12 @@ int ve2_cap_dqbuf(void *fh, uint8_t *buf, uint64_t *pts,
 	ret = ve2rpc_dqframe(ctx->cap_hndl, disp_buf, pts, &ctx->eos,
 			     &ctx->no_frame, &no_show_frm_cnt);
 
-	if (ctx->internal_buf_cnt && ret != -EBUSY)
+	if (ret == 0) {
 		ctx->internal_buf_cnt -= (no_show_frm_cnt + 1);
+	} else {
+		if (ret == -ENODATA)
+			ctx->internal_buf_cnt -= no_show_frm_cnt;
 
-	if (ret) {
 		//ve2_cap_dqbuf fail is normal
 		return ret;
 	}
@@ -1039,9 +1040,11 @@ static void __exit ve2_exit(void)
 module_init(ve2_init);
 module_exit(ve2_exit);
 
+#if IS_ENABLED(CONFIG_RTK_V4L2_DECODER)
 #if IS_MODULE(CONFIG_RTK_FW_REMOTEPROC)
 MODULE_SOFTDEP("pre: rtk_fw_remoteproc");
 #endif
+#endif
 
 MODULE_VERSION(xstr(GIT_VERSION));
 MODULE_LICENSE("GPL");
diff --git a/drivers/media/platform/realtek/vpu/stateful/ve2rpc.c b/drivers/media/platform/realtek/vpu/stateful/ve2rpc.c
index 1627dfbdc0e2..c2e94872db01 100644
--- a/drivers/media/platform/realtek/vpu/stateful/ve2rpc.c
+++ b/drivers/media/platform/realtek/vpu/stateful/ve2rpc.c
@@ -2001,18 +2001,16 @@ static int _ve2rpc_get_frame(struct ve2rpc *cap_hndl, void **disp_buf,
 
 	dsb(sy);
 
-	if(*no_show_frm_cnt)
-		pr_err("decoded frame with no show frame count %d", *no_show_frm_cnt);
-	else
-		*no_show_frm_cnt = 0;
-
 	if (nVersion == 0x8001) {
-		pr_err("No decoded frame with no show frame count %d", *no_show_frm_cnt);
+		vpu_output_dbg("No decoded frame with no show frame count %d", *no_show_frm_cnt);
 		ret = -ENODATA;
 		*no_frame = true;
 		goto exit;
 	}
 
+	if(*no_show_frm_cnt)
+		vpu_output_dbg("decoded frame with no show frame count %d", *no_show_frm_cnt);
+
 	mutex_lock(&cap_hndl->travel_mutex);
 	list_for_each_entry_safe (tentry, tmp_tentry, &cap_hndl->qframe.tlist,
 		list) {
@@ -2020,7 +2018,7 @@ static int _ve2rpc_get_frame(struct ve2rpc *cap_hndl, void **disp_buf,
 		if (y_phy_addr && tentry->phy_addr == y_phy_addr &&
 			buf->vb2_buf.state != VB2_BUF_STATE_ACTIVE ) {
 			vpu_output_dbg("Waiting for show existing frame %d!!!!", buf->vb2_buf.state);
-			ret = -EBUSY;
+			ret = -EADDRINUSE;
 			mutex_unlock(&cap_hndl->travel_mutex);
 			return ret;
 		}
@@ -2125,7 +2123,7 @@ static int _ve2rpc_get_frame(struct ve2rpc *cap_hndl, void **disp_buf,
 			vpu_err("Can't find vb2_v4l2_buf for 0x%x\n",
 				y_phy_addr);
 			mutex_unlock(&cap_hndl->dpb_mutex);
-			return -ENODATA;
+			return -ENOBUFS;
 		}
 	} else {
 		for (i = VE2_MAX_DPB_NUM - 1; i >= 0; i--) {
@@ -2141,7 +2139,7 @@ static int _ve2rpc_get_frame(struct ve2rpc *cap_hndl, void **disp_buf,
 		if (i == -1) {
 			vpu_err("Can't find valid buffer for EOS\n");
 			mutex_unlock(&cap_hndl->dpb_mutex);
-			return -ENODATA;
+			return -ENOBUFS;
 		}
 	}
 	mutex_unlock(&cap_hndl->dpb_mutex);
@@ -2189,7 +2187,7 @@ int ve2rpc_dqframe(struct ve2rpc *cap_hndl, void *disp_buf, uint64_t *pts,
 				ret = -ENODATA;
 			} else if (ret != 0) {
 				mutex_unlock(&prb->lock);
-				if (ret != -EBUSY)
+				if (ret != -EADDRINUSE)
 					vpu_err("fail to get a frame, try again ret %d\n",
 						ret);
 				return -EAGAIN;
diff --git a/drivers/media/platform/realtek/vpu/stateful/vpu.c b/drivers/media/platform/realtek/vpu/stateful/vpu.c
index a62e8b6e867b..b3de96220184 100644
--- a/drivers/media/platform/realtek/vpu/stateful/vpu.c
+++ b/drivers/media/platform/realtek/vpu/stateful/vpu.c
@@ -671,7 +671,6 @@ static int vpu_try_fmt(struct v4l2_fh *fh, struct v4l2_format *f)
 	unsigned int height = 0;
 	unsigned int bytesperline = 0;
 	unsigned int sizeimage = 0;
-	unsigned int pre_parse_error = 0;
 
 	fmt = find_format(f);
 	if (!fmt) {
@@ -696,10 +695,9 @@ static int vpu_try_fmt(struct v4l2_fh *fh, struct v4l2_format *f)
 				width = ctx->ddr_width;
 				height = ctx->ddr_height;
 			}
-			else {
+			else if(ctx->is_bs_error){
 				width = ALIGN(width, RTK_VE2_WIDTH_ALIGN);
 				height = ALIGN(height, RTK_VE2_HEIGHT_ALIGN);
-				pre_parse_error = 1;
 			}
 		} else {
 			width = ALIGN(width, RTK_DPB_WIDTH_ALIGN);
@@ -708,7 +706,7 @@ static int vpu_try_fmt(struct v4l2_fh *fh, struct v4l2_format *f)
 
 		bytesperline = width;
 		sizeimage = bytesperline * height * 3 / 2;
-		if(pre_parse_error) sizeimage = sizeimage * 10 / 8;
+		if(ctx->is_bs_error) sizeimage = sizeimage * 10 / 8;
 	} else {
 		width = ALIGN(width, RTK_DPB_WIDTH_ALIGN);
 		height = ALIGN(height, RTK_DPB_HEIGHT_ALIGN);
@@ -999,9 +997,10 @@ int vpu_stop_streaming(struct vb2_queue *q)
 	}
 
 	mutex_lock(&ctx->vpu_mutex);
-	ret = ctx->veng_ops->ve_stop_streaming(q);
-	if (ret) {
-		vpu_err("fail to stop streaming(ve2_stop_streaming %d)\n", ret);
+	if (ctx && ctx->veng_ops) {
+		ret = ctx->veng_ops->ve_stop_streaming(q);
+		if (ret)
+			vpu_err("fail to stop streaming %d\n", ret);
 	}
 
 	if (V4L2_TYPE_IS_OUTPUT(q->type))
-- 
2.45.2

