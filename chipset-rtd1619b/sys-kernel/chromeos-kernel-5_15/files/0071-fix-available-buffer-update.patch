From fbac3ad680242920e53d9507163d2d481b0d6568 Mon Sep 17 00:00:00 2001
From: Edward Wu <edwardwu@realtek.com>
Date: Fri, 9 Aug 2024 15:20:44 +0800
Subject: [PATCH 71/98] fix available buffer update

Change-Id: I59b328e5f6660e2107f5b36b21adb1581c871bc7
---
 .../arm64/chromiumos-realtek.flavour.config   | 21 +++++++++
 sound/soc/realtek/common/snd-hifi-realtek.c   | 43 ++++++++++++++++++-
 sound/soc/realtek/common/snd-hifi-realtek.h   |  3 ++
 sound/soc/realtek/common/snd-realtek.c        |  2 +-
 4 files changed, 66 insertions(+), 3 deletions(-)

diff --git a/chromeos/config/chromeos/arm64/chromiumos-realtek.flavour.config b/chromeos/config/chromeos/arm64/chromiumos-realtek.flavour.config
index 6dfda66c3981..7ae5199c9a47 100644
--- a/chromeos/config/chromeos/arm64/chromiumos-realtek.flavour.config
+++ b/chromeos/config/chromeos/arm64/chromiumos-realtek.flavour.config
@@ -72,3 +72,24 @@ CONFIG_MALI_PLATFORM_NAME="rtk"
 CONFIG_MALI_GATOR_SUPPORT=n
 CONFIG_MALI_DEVFREQ=y
 CONFIG_MALI_MIDGARD_ENABLE_TRACE=y
+CONFIG_SOUND=y
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_COMPRESS_OFFLOAD=y
+CONFIG_SND_JACK=y
+CONFIG_SND_JACK_INPUT_DEV=y
+CONFIG_SND_PCM_TIMER=y
+CONFIG_SND_HRTIMER=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_MAX_CARDS=32
+CONFIG_SND_PROC_FS=y
+CONFIG_SND_HDA_PREALLOC_SIZE=64
+CONFIG_SND_SOC=y
+CONFIG_SND_SOC_COMPRESS=y
+CONFIG_SND_ACPU_AO=m
+CONFIG_SND_HIFI_AO=m
+CONFIG_SND_SOC_REALTEK=m
+CONFIG_SND_SOC_REALTEK_NOTIFY=m
+CONFIG_SND_SOC_REALTEK_FL3236=m
+CONFIG_RTK_PM_HIFI=m
+CONFIG_RTK_CACHEABLE_HEADER=y
diff --git a/sound/soc/realtek/common/snd-hifi-realtek.c b/sound/soc/realtek/common/snd-hifi-realtek.c
index 562427881d41..2960a5146f1f 100644
--- a/sound/soc/realtek/common/snd-hifi-realtek.c
+++ b/sound/soc/realtek/common/snd-hifi-realtek.c
@@ -71,6 +71,7 @@ static void snd_card_capture_setup_pts(struct snd_pcm_runtime *runtime,
 static int rtk_snd_capture_hdmirx_enable(void);
 static void rtk_snd_capture_handle_HDMI_plug_out(struct snd_pcm_substream *substream);
 
+static enum hrtimer_restart snd_card_timer_function(struct hrtimer *timer);
 static void rtk_playback_realtime_function(struct snd_pcm_runtime *runtime);
 static enum hrtimer_restart rtk_capture_timer_function(struct hrtimer *timer);
 static void snd_card_capture_calculate_pts(struct snd_pcm_runtime *runtime,
@@ -1700,6 +1701,10 @@ static int snd_card_playback_open(struct snd_pcm_substream *substream)
 
 	dpcm->mixer = (struct rtk_snd_mixer *)(substream->pcm->card->private_data);
 
+	// init hr timer
+	hrtimer_init(&dpcm->hr_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
+	dpcm->hr_timer.function = &snd_card_timer_function;
+
 	/* init dec_out_msec */
 	dpcm->dec_out_msec = 0;
 
@@ -2041,6 +2046,22 @@ static int snd_card_capture_close(struct snd_pcm_substream *substream)
 	return ret;
 }
 
+static enum hrtimer_restart snd_card_timer_function(struct hrtimer *timer)
+{
+	struct snd_rtk_pcm *dpcm =
+		container_of(timer, struct snd_rtk_pcm, hr_timer);
+	struct snd_pcm_substream *substream = dpcm->substream;
+
+	if (dpcm->enHRTimer == HRTIMER_RESTART) {
+		snd_pcm_period_elapsed(substream);
+		/* Set up the next time */
+		hrtimer_forward_now(timer, dpcm->ktime);
+		return HRTIMER_RESTART;
+	} else {
+		return HRTIMER_NORESTART;
+	}
+}
+
 static int snd_card_playback_ack(struct snd_pcm_substream *substream)
 {
 	struct snd_pcm_runtime *runtime = substream->runtime;
@@ -2061,6 +2082,7 @@ static int snd_card_playback_close(struct snd_pcm_substream *substream)
 	phys_addr_t dat;
 	void *vaddr;
 	size_t size;
+	ktime_t remaining;
 
 	pr_info("[ALSA %s %d]\n", __func__, __LINE__);
 
@@ -2113,6 +2135,17 @@ static int snd_card_playback_close(struct snd_pcm_substream *substream)
 		filp_close(dpcm->fp, NULL);
 #endif
 
+	/* destroy the hr timer */
+	remaining = hrtimer_get_remaining(&dpcm->hr_timer);
+	if (ktime_to_ns(remaining) > 0)
+		ndelay(ktime_to_ns(remaining));
+
+	ret = hrtimer_cancel(&dpcm->hr_timer);
+	if (ret) {
+		pr_err("The timer still alive...\n");
+		goto exit;
+	}
+
 exit:
 	rpc_release_ao_flash_pin(dpcm->phy_addr_rpc,
 				 dpcm->vaddr_rpc,
@@ -2299,7 +2332,7 @@ static snd_pcm_uframes_t snd_card_playback_pointer(struct snd_pcm_substream *sub
 		       (unsigned int)(dpcm->dec_inring->begin_addr + dpcm->dec_inring->size),
 		       (unsigned int)dpcm->dec_inring->write_ptr,
 		       (unsigned int)dpcm->dec_inring->read_ptr[0]);
-		pr_err("[hw_ringrp %x runtime->period_size %d runtime->periods %d]\n",
+		pr_err("[hw_ringrp %x runtime->period_size %ld runtime->periods %d]\n",
 		       hw_ringrp, runtime->period_size, runtime->periods);
 		pr_err("[snd_pcm_playback_avail %d runtime->control->avail_min %d]\n",
 		       (int)snd_pcm_playback_avail(runtime),
@@ -2577,6 +2610,8 @@ static int snd_card_playback_prepare(struct snd_pcm_substream *substream)
 		       (int)runtime->status->hw_ptr);
 	}
 
+	dpcm->ktime = ktime_set(0, (runtime->period_size * 1000) * 1000 / runtime->rate * 1000);
+
 	if (dpcm->init_ring) {
 		/* Reset the ptr about playback.
 		 * prehw_ptr will influence the next ptr update in timer function.
@@ -3148,8 +3183,12 @@ static int snd_card_playback_trigger(struct snd_pcm_substream *substream, int cm
 
 	switch (cmd) {
 	case SNDRV_PCM_TRIGGER_STOP:
+		dpcm->enHRTimer = HRTIMER_NORESTART;
+		hrtimer_try_to_cancel(&dpcm->hr_timer);
 		break;
 	case SNDRV_PCM_TRIGGER_START:
+		dpcm->enHRTimer = HRTIMER_RESTART;
+		hrtimer_start(&dpcm->hr_timer, dpcm->ktime, HRTIMER_MODE_REL);
 		break;
 	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
 		break;
@@ -3680,7 +3719,7 @@ static struct attribute_group rtk_alsa_attr_group = {
 };
 
 static struct kobject *alsa_kobj;
-static int __init alsa_sysfs_init(void)
+static int alsa_sysfs_init(void)
 {
 	int ret;
 
diff --git a/sound/soc/realtek/common/snd-hifi-realtek.h b/sound/soc/realtek/common/snd-hifi-realtek.h
index c6b7cbf5900d..636e97c00147 100644
--- a/sound/soc/realtek/common/snd-hifi-realtek.h
+++ b/sound/soc/realtek/common/snd-hifi-realtek.h
@@ -413,6 +413,9 @@ struct snd_rtk_pcm {
 	mm_segment_t fs;
 #endif
 
+	struct hrtimer hr_timer;           /* Hr timer for playback */
+	enum hrtimer_restart enHRTimer;    /* Hr timer state */
+	ktime_t ktime;                     /* Ktime for hr timer */
 	int dec_agent_id;
 	int dec_pin_id;
 	int ao_agent_id;
diff --git a/sound/soc/realtek/common/snd-realtek.c b/sound/soc/realtek/common/snd-realtek.c
index 991c61c79ee7..d9975d7f387a 100644
--- a/sound/soc/realtek/common/snd-realtek.c
+++ b/sound/soc/realtek/common/snd-realtek.c
@@ -3799,7 +3799,7 @@ static struct attribute_group rtk_alsa_attr_group = {
 };
 
 static struct kobject *alsa_kobj;
-static int __init alsa_sysfs_init(void)
+static int alsa_sysfs_init(void)
 {
 	int ret;
 
-- 
2.45.2

