From a8b52d65c640e1f25b110aaf9357e4c24c363539 Mon Sep 17 00:00:00 2001
From: James Tai <james.tai@realtek.com>
Date: Thu, 10 Aug 2023 17:35:46 +0800
Subject: [PATCH 49/80] soc: realtek: common: rtk_tee: Add tee_shm_register_fd
 function

register a shared memory from a file descriptor.

Change-Id: Ibe2c96ebcf639263b1ec503f5c5e841739d629cd
---
 include/linux/tee_drv.h  | 11 +++++++++++
 include/uapi/linux/tee.h | 29 +++++++++++++++++++++++++++++
 2 files changed, 40 insertions(+)

diff --git a/include/linux/tee_drv.h b/include/linux/tee_drv.h
index 38b701b7af4c..6201fe521a8b 100644
--- a/include/linux/tee_drv.h
+++ b/include/linux/tee_drv.h
@@ -203,6 +203,7 @@ int tee_session_calc_client_uuid(uuid_t *uuid, u32 connection_method,
  * subsystem and from drivers that implements their own shm pool manager.
  */
 struct tee_shm {
+	struct tee_device *teedev;
 	struct tee_context *ctx;
 	phys_addr_t paddr;
 	void *kaddr;
@@ -357,6 +358,16 @@ static inline bool tee_shm_is_registered(struct tee_shm *shm)
 	return shm && (shm->flags & TEE_SHM_REGISTER);
 }
 
+/**
+ * tee_shm_register_fd() - Register shared memory from file descriptor
+ *
+ * @ctx:	Context that allocates the shared memory
+ * @fd:		shared memory file descriptor reference.
+ *
+ * @returns a pointer to 'struct tee_shm'
+ */
+struct tee_shm *tee_shm_register_fd(struct tee_context *ctx, int fd);
+
 /**
  * tee_shm_free() - Free shared memory
  * @shm:	Handle to shared memory to free
diff --git a/include/uapi/linux/tee.h b/include/uapi/linux/tee.h
index 25a6c534beb1..39e283d2f8da 100644
--- a/include/uapi/linux/tee.h
+++ b/include/uapi/linux/tee.h
@@ -363,6 +363,35 @@ struct tee_iocl_supp_send_arg {
 #define TEE_IOC_SUPPL_SEND	_IOR(TEE_IOC_MAGIC, TEE_IOC_BASE + 7, \
 				     struct tee_ioctl_buf_data)
 
+/**
+ * struct tee_ioctl_shm_register_fd_data - Shared memory registering argument
+ * @fd:		[in] file descriptor identifying the shared memory
+ * @size:	[out] Size of shared memory to allocate
+ * @flags:	[in] Flags to/from allocation.
+ * @id:		[out] Identifier of the shared memory
+ *
+ * The flags field should currently be zero as input. Updated by the call
+ * with actual flags as defined by TEE_IOCTL_SHM_* above.
+ * This structure is used as argument for TEE_IOC_SHM_ALLOC below.
+ */
+struct tee_ioctl_shm_register_fd_data {
+	__s64 fd;
+	__u64 size;
+	__u32 flags;
+	__s32 id;
+}__attribute__((aligned(8)));
+
+/**
+ * TEE_IOC_SHM_REGISTER_FD - register a shared memory from a file descriptor
+ *
+ * Returns a file descriptor on success or < 0 on failure
+ *
+ * The returned file descriptor refers to the shared memory object in kernel
+ * land. The shared memory is freed when the descriptor is closed.
+ */
+#define TEE_IOC_SHM_REGISTER_FD	_IOWR(TEE_IOC_MAGIC, TEE_IOC_BASE + 8, \
+				     struct tee_ioctl_shm_register_fd_data)
+
 /**
  * struct tee_ioctl_shm_register_data - Shared memory register argument
  * @addr:      [in] Start address of shared memory to register
-- 
2.45.2

